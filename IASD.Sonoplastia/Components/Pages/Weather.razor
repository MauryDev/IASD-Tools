@page "/provaivede"
@inject IProvaiVedeTools provaiVedeTools
@using System.Diagnostics
@using IASD.Sonoplastia.Services
<PageTitle>Informativo</PageTitle>

<MudText Typo="Typo.h2">Informativo</MudText>

@if (isloading)
{
    <MudOverlay DarkBackground="true" Visible="true">
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
    </MudOverlay>
}
@if (informativoInfo != null)
{
    <MudText Typo="Typo.h4"><b>@informativoInfo.Titulo</b></MudText>
    <MudImage Src="@provaiVedeTools.PreviewImage()" />
    <MudText Typo="Typo.body1">@informativoInfo.Descricao</MudText>
    <MudText Typo="Typo.body1">Data: @informativoInfo.Data</MudText>
    <div class="mb-2">
        <MudButton Color="Color.Dark" Variant="Variant.Filled" Class="btn btn-primary ms-2" OnClick="IncrementCount">Abrir</MudButton>
    </div>
    <MudText Typo="Typo.body1">Pre-Visualização</MudText>

    <video width="400" controls>
        <source src="@provaiVedeTools.PreviewVideo()" type="video/mp4">
    </video>
}


@code {
    Data.ProvaiVedeInfo informativoInfo;
    bool isloading = false;
    protected async override Task OnInitializedAsync()
    {
        isloading = true;
        this.StateHasChanged();
        await provaiVedeTools.Download();
        await base.OnInitializedAsync();

        informativoInfo = provaiVedeTools.Info;
        isloading = false;
        this.StateHasChanged();
    }
    private void IncrementCount()
    {

        provaiVedeTools.Open();
    }
}
